{% extends 'base.html.twig' %}

{% block title %}Hello OfferController!{% endblock %}

{% block body %}

    <style>
        .example-wrapper {
            margin: 1em auto;
            max-width: 800px;
            width: 95%;
            font: 18px/1.5 sans-serif;
        }

        .example-wrapper code {
            background: #F5F5F5;
            padding: 2px 6px;
        }

        <link href

        =
        "
        {{ asset('css/images.css') }}
        "
        rel

        =
        "stylesheet"
        /
        >

    </style>
<div style="margin: 3%">
    <div>
        <h1 class="text-center">Oferta âœ…</h1><br>
        <div class="offer">

            {# <img id="gymoffer1" src="{{ asset('images/gymoffer1.png') }}" alt="1"/> #}
        </div>

        <div class="memberships">
            <div class="js-memberships-type-table">
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th>Lp.</th>
                        <th>Nazwa</th>
                        <th>Czas trwania</th>
                        <th>Typ</th>
                        <th>Cena</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for membership in membership_types %}
                        <tr>
                            <td>{{ membership.id }}</td>
                            <td>{{ membership.name }}</td>
                            <td>{{ membership.duration }} Dni</td>
                            <td>{{ membership.type }}</td>
                            <td>{{ membership.price }} PLN</td>

                        </tr>

                    {% endfor %}
                    </tbody>
                    <tfoot>
                    <tr>
                        <td>&nbsp;</td>
                        <th></th>
                        <td>&nbsp;</td>
                        <th></th>
                        <td>&nbsp;</td>
                    </tr>
                    </tfoot>
                </table>

            </div>
        </div>


    </div>
    <div id="smart-button-container">
        <div style="text-align: center;">
            <div style="margin-bottom: 1.25rem;">
                <p></p>
                <select id="item-options">
                    {% for membership in membership_types %}
                    <option value="{{ membership.id }}" price="{{ membership.price }}" data-url="{{ path('buy_membership',{id: membership.id }) }}"> {{ membership.price }} PLN </option>
                    {% endfor %}

                </select>
                <select style="visibility: hidden" id="quantitySelect"></select>
            </div>
            <div id="paypal-button-container"></div>
        </div>
    </div>

</div>




{% endblock %}
{% block javascripts %}
    <script src="https://www.paypal.com/sdk/js?client-id=sb&currency=PLN"
            data-sdk-integration-source="button-factory"></script>
    <script>
        function initPayPalButton() {
            var shipping = 0;
            var itemOptions = document.querySelector("#smart-button-container #item-options");
            var quantity = parseInt();
            var quantitySelect = document.querySelector("#smart-button-container #quantitySelect");
            if (!isNaN(quantity)) {
                quantitySelect.style.visibility = "visible";
            }
            var orderDescription = '';
            if (orderDescription === '') {
                orderDescription = 'Item';
            }
            paypal.Buttons({
                style: {
                    shape: 'rect',
                    color: 'blue',
                    layout: 'horizontal',
                    label: 'buynow',

                },

                createOrder: function (data, actions) {
                    var selectedItemDescription = itemOptions.options[itemOptions.selectedIndex].value;
                    var selectedItemPrice = parseFloat(itemOptions.options[itemOptions.selectedIndex].getAttribute("price"));
                    var tax = (23 === 0) ? 0 : (selectedItemPrice * (parseFloat(23) / 100));
                    if (quantitySelect.options.length > 0) {
                        quantity = parseInt(quantitySelect.options[quantitySelect.selectedIndex].value);
                    } else {
                        quantity = 1;
                    }

                    tax *= quantity;
                    tax = Math.round(tax * 100) / 100;
                    var priceTotal = quantity * selectedItemPrice + parseFloat(shipping) + tax;
                    priceTotal = Math.round(priceTotal * 100) / 100;
                    var itemTotalValue = Math.round((selectedItemPrice * quantity) * 100) / 100;
                    var url = itemOptions.options[itemOptions.selectedIndex].getAttribute("data-url")
                    $.ajax({
                        url:  url ,
                        method: 'POST',
                        data: itemOptions.options[itemOptions.selectedIndex].value,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                        },

                    })
                    return actions.order.create({
                        purchase_units: [{
                            description: orderDescription,
                            amount: {
                                currency_code: 'PLN',
                                value: priceTotal,
                                breakdown: {
                                    item_total: {
                                        currency_code: 'PLN',
                                        value: itemTotalValue,
                                    },
                                    shipping: {
                                        currency_code: 'PLN',
                                        value: shipping,
                                    },
                                    tax_total: {
                                        currency_code: 'PLN',
                                        value: tax,
                                    }
                                }
                            },
                            items: [{
                                name: selectedItemDescription,
                                unit_amount: {
                                    currency_code: 'PLN',
                                    value: selectedItemPrice,
                                },
                                quantity: quantity
                            }]
                        }]
                    });
                },

                onApprove: function (data, actions) {
                    var url = itemOptions.options[itemOptions.selectedIndex].getAttribute("data-url")
                     $.ajax({
                         url:  url ,
                         method: 'POST',
                         data: itemOptions.options[itemOptions.selectedIndex].value,
                        success: function (data) {
                        },
                        error: function (jqXHR) {
                            $form.closest('.js-new-rep-log-form-wrapper')
                                .html(jqXHR.responseText);
                        }
                    })
                    return actions.order.capture().then(function (details) {
                        alert('Transaction completed by ' + details.payer.name.given_name + '!');
                    });
                },
                onError: function (err) {
                    console.log(err);
                },
            }).render('#paypal-button-container');
        }

        initPayPalButton();
    </script>

{% endblock %}
